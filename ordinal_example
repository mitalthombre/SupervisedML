{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"lIYdn1woOS1n","executionInfo":{"status":"ok","timestamp":1669633442724,"user_tz":-60,"elapsed":2938,"user":{"displayName":"Ben Elvin","userId":"09111547648527423041"}}},"outputs":[],"source":["import pandas as pd\n","from sklearn.model_selection import train_test_split\n","from sklearn.impute import SimpleImputer\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.pipeline import make_pipeline\n","from sklearn.preprocessing import OneHotEncoder\n","from sklearn.compose import ColumnTransformer\n","from sklearn.preprocessing import OrdinalEncoder\n","from sklearn.model_selection import GridSearchCV\n","from sklearn import set_config\n","\n","# reading\n","url = \"https://drive.google.com/file/d/11uge7w4gJr_ufpN6bNsyGOcdWNUsO7Kc/view?usp=sharing\"\n","path = 'https://drive.google.com/uc?export=download&id='+url.split('/')[-2]\n","data = pd.read_csv(path)\n","\n","# X and y creation\n","X = data.copy()\n","y = X.pop(\"Expensive\")\n","\n","# data splitting\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=123)\n","\n","# building the pipeline\n","X_cat = X.select_dtypes(exclude=\"number\").copy()\n","X_num = X.select_dtypes(include=\"number\").copy()\n","\n","# numerical pipeline\n","numerical_pipe = make_pipeline(\n","    SimpleImputer(strategy=\"mean\"))\n","\n","# categorical pipeline\n","\n","## list columns for ordinal and ohe\n","## (Remember: .get_indexer() gets the index number of the column)\n","X_cat_ordinal = X_cat.columns.get_indexer(['ExterQual', 'ExterCond', \n","                                           'BsmtQual', 'BsmtCond',\n","                                           'BsmtExposure', 'BsmtFinType1', \n","                                           'KitchenQual', 'FireplaceQu'])\n","\n","X_cat_ohe = X_cat.columns.get_indexer(list(set(X_cat) - set(X_cat_ordinal)))\n","\n","## explicitly determine categories for ordinal encoding\n","ExterQual_cats = [\"Po\", \"Fa\", \"TA\", \"Gd\", \"Ex\"]\n","ExterCond_cats = [\"Po\", \"Fa\", \"TA\", \"Gd\", \"Ex\"]\n","BsmtQual_cats = [\"N_A\", \"Po\", \"Fa\", \"TA\", \"Gd\", \"Ex\"]\n","BsmtCond_cats = [\"N_A\", \"Po\", \"Fa\", \"TA\", \"Gd\", \"Ex\"]\n","BsmtExposure_cats = [\"N_A\", \"No\", \"Mn\", \"Av\", \"Gd\"]\n","BsmtFinType1_cats = [\"N_A\", \"Unf\", \"LwQ\", \"Rec\", \"BLQ\", \"ALQ\", \"GLQ\"]\n","KitchenQual_cats = [\"Po\", \"Fa\", \"TA\", \"Gd\", \"Ex\"]\n","FireplaceQu_cats = [\"N_A\", \"Po\", \"Fa\", \"TA\", \"Gd\", \"Ex\"]\n","\n","cats_ord = [ExterQual_cats, ExterCond_cats, BsmtQual_cats, BsmtCond_cats, \n","            BsmtExposure_cats, BsmtFinType1_cats, KitchenQual_cats, FireplaceQu_cats]\n","\n","## determine the encoders for ordinal and ohe\n","ordinal_encoder = OrdinalEncoder(categories=cats_ord)\n","ohe_encoder = OneHotEncoder(handle_unknown=\"ignore\")\n","\n","## bringing together the ohe and ordinal\n","categorical_encoder = ColumnTransformer(\n","    transformers=[\n","        (\"cat_ordinal\", ordinal_encoder, X_cat_ordinal),\n","        (\"cat_onehot\", ohe_encoder, X_cat_ohe),\n","    ]\n",")\n","\n","## adding an imputer to fill in missing values before either of the categorical encoders\n","categorical_pipe = make_pipeline(SimpleImputer(strategy=\"constant\", fill_value=\"N_A\"),\n","                                 categorical_encoder)\n","\n","# bringing together the categorical and numeric\n","full_preprocessing = ColumnTransformer(\n","    transformers=[\n","        (\"num_pipe\", numerical_pipe, X_num.columns),\n","        (\"cat_pipe\", categorical_pipe, X_cat.columns),\n","    ]\n",")\n","\n","# final pipeline to add a model after all the preprocessing\n","full_pipeline = make_pipeline(full_preprocessing, \n","                              DecisionTreeClassifier())\n","\n","# define parameter grid for grid search\n","param_grid = {\n","    \"columntransformer__num_pipe__simpleimputer__strategy\":[\"mean\", \"median\"],\n","    \"decisiontreeclassifier__max_depth\": range(2, 14, 2),\n","    \"decisiontreeclassifier__min_samples_leaf\": range(3, 12, 2)\n","}\n","\n","# initialise GridSearchCV\n","search = GridSearchCV(full_pipeline,\n","                      param_grid,\n","                      cv=5,\n","                      scoring = 'accuracy',\n","                      verbose=1)\n","\n","# Set the config so that we can view our preprocessor\n","set_config(display=\"diagram\")"]},{"cell_type":"code","source":["search.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":311},"id":"c6tdWbmpMBos","executionInfo":{"status":"ok","timestamp":1669633476652,"user_tz":-60,"elapsed":33936,"user":{"displayName":"Ben Elvin","userId":"09111547648527423041"}},"outputId":"65171e4c-1e03-4ef1-c7cb-669f0e000648"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Fitting 5 folds for each of 60 candidates, totalling 300 fits\n"]},{"output_type":"execute_result","data":{"text/plain":["GridSearchCV(cv=5,\n","             estimator=Pipeline(steps=[('columntransformer',\n","                                        ColumnTransformer(transformers=[('num_pipe',\n","                                                                         Pipeline(steps=[('simpleimputer',\n","                                                                                          SimpleImputer())]),\n","                                                                         Index(['LotArea', 'LotFrontage', 'TotalBsmtSF', 'BedroomAbvGr', 'Fireplaces',\n","       'PoolArea', 'GarageCars', 'WoodDeckSF', 'ScreenPorch'],\n","      dtype='object')),\n","                                                                        ('cat_pipe',\n","                                                                         Pipeline(steps=[('simpleimputer',\n","                                                                                          Si...\n","       'BsmtExposure', 'BsmtFinType1', 'KitchenQual', 'FireplaceQu'],\n","      dtype='object'))])),\n","                                       ('decisiontreeclassifier',\n","                                        DecisionTreeClassifier())]),\n","             param_grid={'columntransformer__num_pipe__simpleimputer__strategy': ['mean',\n","                                                                                  'median'],\n","                         'decisiontreeclassifier__max_depth': range(2, 14, 2),\n","                         'decisiontreeclassifier__min_samples_leaf': range(3, 12, 2)},\n","             scoring='accuracy', verbose=1)"],"text/html":["<style>#sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac {color: black;background-color: white;}#sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac pre{padding: 0;}#sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac div.sk-toggleable {background-color: white;}#sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac div.sk-estimator:hover {background-color: #d4ebff;}#sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac div.sk-item {z-index: 1;}#sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac div.sk-parallel::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac div.sk-parallel-item:only-child::after {width: 0;}#sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-fe0ecaa0-1689-4cf0-b287-62dad3f82fac\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=5,\n","             estimator=Pipeline(steps=[(&#x27;columntransformer&#x27;,\n","                                        ColumnTransformer(transformers=[(&#x27;num_pipe&#x27;,\n","                                                                         Pipeline(steps=[(&#x27;simpleimputer&#x27;,\n","                                                                                          SimpleImputer())]),\n","                                                                         Index([&#x27;LotArea&#x27;, &#x27;LotFrontage&#x27;, &#x27;TotalBsmtSF&#x27;, &#x27;BedroomAbvGr&#x27;, &#x27;Fireplaces&#x27;,\n","       &#x27;PoolArea&#x27;, &#x27;GarageCars&#x27;, &#x27;WoodDeckSF&#x27;, &#x27;ScreenPorch&#x27;],\n","      dtype=&#x27;object&#x27;)),\n","                                                                        (&#x27;cat_pipe&#x27;,\n","                                                                         Pipeline(steps=[(&#x27;simpleimputer&#x27;,\n","                                                                                          Si...\n","       &#x27;BsmtExposure&#x27;, &#x27;BsmtFinType1&#x27;, &#x27;KitchenQual&#x27;, &#x27;FireplaceQu&#x27;],\n","      dtype=&#x27;object&#x27;))])),\n","                                       (&#x27;decisiontreeclassifier&#x27;,\n","                                        DecisionTreeClassifier())]),\n","             param_grid={&#x27;columntransformer__num_pipe__simpleimputer__strategy&#x27;: [&#x27;mean&#x27;,\n","                                                                                  &#x27;median&#x27;],\n","                         &#x27;decisiontreeclassifier__max_depth&#x27;: range(2, 14, 2),\n","                         &#x27;decisiontreeclassifier__min_samples_leaf&#x27;: range(3, 12, 2)},\n","             scoring=&#x27;accuracy&#x27;, verbose=1)</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"7d7823dd-0afa-4478-96cb-7f41897ed6d2\" type=\"checkbox\" ><label for=\"7d7823dd-0afa-4478-96cb-7f41897ed6d2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=5,\n","             estimator=Pipeline(steps=[(&#x27;columntransformer&#x27;,\n","                                        ColumnTransformer(transformers=[(&#x27;num_pipe&#x27;,\n","                                                                         Pipeline(steps=[(&#x27;simpleimputer&#x27;,\n","                                                                                          SimpleImputer())]),\n","                                                                         Index([&#x27;LotArea&#x27;, &#x27;LotFrontage&#x27;, &#x27;TotalBsmtSF&#x27;, &#x27;BedroomAbvGr&#x27;, &#x27;Fireplaces&#x27;,\n","       &#x27;PoolArea&#x27;, &#x27;GarageCars&#x27;, &#x27;WoodDeckSF&#x27;, &#x27;ScreenPorch&#x27;],\n","      dtype=&#x27;object&#x27;)),\n","                                                                        (&#x27;cat_pipe&#x27;,\n","                                                                         Pipeline(steps=[(&#x27;simpleimputer&#x27;,\n","                                                                                          Si...\n","       &#x27;BsmtExposure&#x27;, &#x27;BsmtFinType1&#x27;, &#x27;KitchenQual&#x27;, &#x27;FireplaceQu&#x27;],\n","      dtype=&#x27;object&#x27;))])),\n","                                       (&#x27;decisiontreeclassifier&#x27;,\n","                                        DecisionTreeClassifier())]),\n","             param_grid={&#x27;columntransformer__num_pipe__simpleimputer__strategy&#x27;: [&#x27;mean&#x27;,\n","                                                                                  &#x27;median&#x27;],\n","                         &#x27;decisiontreeclassifier__max_depth&#x27;: range(2, 14, 2),\n","                         &#x27;decisiontreeclassifier__min_samples_leaf&#x27;: range(3, 12, 2)},\n","             scoring=&#x27;accuracy&#x27;, verbose=1)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-serial\"><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"d7e8e8ce-9801-4979-a80b-d26d7d49f77b\" type=\"checkbox\" ><label for=\"d7e8e8ce-9801-4979-a80b-d26d7d49f77b\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">columntransformer: ColumnTransformer</label><div class=\"sk-toggleable__content\"><pre>ColumnTransformer(transformers=[(&#x27;num_pipe&#x27;,\n","                                 Pipeline(steps=[(&#x27;simpleimputer&#x27;,\n","                                                  SimpleImputer())]),\n","                                 Index([&#x27;LotArea&#x27;, &#x27;LotFrontage&#x27;, &#x27;TotalBsmtSF&#x27;, &#x27;BedroomAbvGr&#x27;, &#x27;Fireplaces&#x27;,\n","       &#x27;PoolArea&#x27;, &#x27;GarageCars&#x27;, &#x27;WoodDeckSF&#x27;, &#x27;ScreenPorch&#x27;],\n","      dtype=&#x27;object&#x27;)),\n","                                (&#x27;cat_pipe&#x27;,\n","                                 Pipeline(steps=[(&#x27;simpleimputer&#x27;,\n","                                                  SimpleImputer(fill_value=&#x27;N_A&#x27;,\n","                                                                strategy=&#x27;constant&#x27;)),\n","                                                 (&#x27;columntransf...\n","                                                                                                               &#x27;Fa&#x27;,\n","                                                                                                               &#x27;TA&#x27;,\n","                                                                                                               &#x27;Gd&#x27;,\n","                                                                                                               &#x27;Ex&#x27;]]),\n","                                                                                   array([ 6,  7,  8,  9, 10, 11, 12, 13])),\n","                                                                                  (&#x27;cat_onehot&#x27;,\n","                                                                                   OneHotEncoder(handle_unknown=&#x27;ignore&#x27;),\n","                                                                                   array([11,  3,  7,  5,  1,  6,  4, 13, 12,  9,  0,  2,  8, 10]))]))]),\n","                                 Index([&#x27;MSZoning&#x27;, &#x27;Condition1&#x27;, &#x27;Heating&#x27;, &#x27;Street&#x27;, &#x27;CentralAir&#x27;,\n","       &#x27;Foundation&#x27;, &#x27;ExterQual&#x27;, &#x27;ExterCond&#x27;, &#x27;BsmtQual&#x27;, &#x27;BsmtCond&#x27;,\n","       &#x27;BsmtExposure&#x27;, &#x27;BsmtFinType1&#x27;, &#x27;KitchenQual&#x27;, &#x27;FireplaceQu&#x27;],\n","      dtype=&#x27;object&#x27;))])</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"5ecf2980-bcfe-4a8e-a1df-f79ee403a0e6\" type=\"checkbox\" ><label for=\"5ecf2980-bcfe-4a8e-a1df-f79ee403a0e6\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">num_pipe</label><div class=\"sk-toggleable__content\"><pre>Index([&#x27;LotArea&#x27;, &#x27;LotFrontage&#x27;, &#x27;TotalBsmtSF&#x27;, &#x27;BedroomAbvGr&#x27;, &#x27;Fireplaces&#x27;,\n","       &#x27;PoolArea&#x27;, &#x27;GarageCars&#x27;, &#x27;WoodDeckSF&#x27;, &#x27;ScreenPorch&#x27;],\n","      dtype=&#x27;object&#x27;)</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"22c95aac-ea85-4aea-9e29-c1925149782a\" type=\"checkbox\" ><label for=\"22c95aac-ea85-4aea-9e29-c1925149782a\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SimpleImputer</label><div class=\"sk-toggleable__content\"><pre>SimpleImputer()</pre></div></div></div></div></div></div></div></div><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"b7d9ffb4-0e10-458d-a56d-dc765c913e2d\" type=\"checkbox\" ><label for=\"b7d9ffb4-0e10-458d-a56d-dc765c913e2d\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">cat_pipe</label><div class=\"sk-toggleable__content\"><pre>Index([&#x27;MSZoning&#x27;, &#x27;Condition1&#x27;, &#x27;Heating&#x27;, &#x27;Street&#x27;, &#x27;CentralAir&#x27;,\n","       &#x27;Foundation&#x27;, &#x27;ExterQual&#x27;, &#x27;ExterCond&#x27;, &#x27;BsmtQual&#x27;, &#x27;BsmtCond&#x27;,\n","       &#x27;BsmtExposure&#x27;, &#x27;BsmtFinType1&#x27;, &#x27;KitchenQual&#x27;, &#x27;FireplaceQu&#x27;],\n","      dtype=&#x27;object&#x27;)</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"6a4f59a0-ee3f-4920-986c-8fe4aee513ad\" type=\"checkbox\" ><label for=\"6a4f59a0-ee3f-4920-986c-8fe4aee513ad\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SimpleImputer</label><div class=\"sk-toggleable__content\"><pre>SimpleImputer(fill_value=&#x27;N_A&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"7796a3c9-f083-424c-ae2b-83381d86a5e5\" type=\"checkbox\" ><label for=\"7796a3c9-f083-424c-ae2b-83381d86a5e5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">columntransformer: ColumnTransformer</label><div class=\"sk-toggleable__content\"><pre>ColumnTransformer(transformers=[(&#x27;cat_ordinal&#x27;,\n","                                 OrdinalEncoder(categories=[[&#x27;Po&#x27;, &#x27;Fa&#x27;, &#x27;TA&#x27;,\n","                                                             &#x27;Gd&#x27;, &#x27;Ex&#x27;],\n","                                                            [&#x27;Po&#x27;, &#x27;Fa&#x27;, &#x27;TA&#x27;,\n","                                                             &#x27;Gd&#x27;, &#x27;Ex&#x27;],\n","                                                            [&#x27;N_A&#x27;, &#x27;Po&#x27;, &#x27;Fa&#x27;,\n","                                                             &#x27;TA&#x27;, &#x27;Gd&#x27;, &#x27;Ex&#x27;],\n","                                                            [&#x27;N_A&#x27;, &#x27;Po&#x27;, &#x27;Fa&#x27;,\n","                                                             &#x27;TA&#x27;, &#x27;Gd&#x27;, &#x27;Ex&#x27;],\n","                                                            [&#x27;N_A&#x27;, &#x27;No&#x27;, &#x27;Mn&#x27;,\n","                                                             &#x27;Av&#x27;, &#x27;Gd&#x27;],\n","                                                            [&#x27;N_A&#x27;, &#x27;Unf&#x27;,\n","                                                             &#x27;LwQ&#x27;, &#x27;Rec&#x27;,\n","                                                             &#x27;BLQ&#x27;, &#x27;ALQ&#x27;,\n","                                                             &#x27;GLQ&#x27;],\n","                                                            [&#x27;Po&#x27;, &#x27;Fa&#x27;, &#x27;TA&#x27;,\n","                                                             &#x27;Gd&#x27;, &#x27;Ex&#x27;],\n","                                                            [&#x27;N_A&#x27;, &#x27;Po&#x27;, &#x27;Fa&#x27;,\n","                                                             &#x27;TA&#x27;, &#x27;Gd&#x27;,\n","                                                             &#x27;Ex&#x27;]]),\n","                                 array([ 6,  7,  8,  9, 10, 11, 12, 13])),\n","                                (&#x27;cat_onehot&#x27;,\n","                                 OneHotEncoder(handle_unknown=&#x27;ignore&#x27;),\n","                                 array([11,  3,  7,  5,  1,  6,  4, 13, 12,  9,  0,  2,  8, 10]))])</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"e29466d9-5b83-4d81-b65f-92a6d88b35e6\" type=\"checkbox\" ><label for=\"e29466d9-5b83-4d81-b65f-92a6d88b35e6\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">cat_ordinal</label><div class=\"sk-toggleable__content\"><pre>[ 6  7  8  9 10 11 12 13]</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"9cff061b-1601-41b9-a75f-f12a5b4002ec\" type=\"checkbox\" ><label for=\"9cff061b-1601-41b9-a75f-f12a5b4002ec\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">OrdinalEncoder</label><div class=\"sk-toggleable__content\"><pre>OrdinalEncoder(categories=[[&#x27;Po&#x27;, &#x27;Fa&#x27;, &#x27;TA&#x27;, &#x27;Gd&#x27;, &#x27;Ex&#x27;],\n","                           [&#x27;Po&#x27;, &#x27;Fa&#x27;, &#x27;TA&#x27;, &#x27;Gd&#x27;, &#x27;Ex&#x27;],\n","                           [&#x27;N_A&#x27;, &#x27;Po&#x27;, &#x27;Fa&#x27;, &#x27;TA&#x27;, &#x27;Gd&#x27;, &#x27;Ex&#x27;],\n","                           [&#x27;N_A&#x27;, &#x27;Po&#x27;, &#x27;Fa&#x27;, &#x27;TA&#x27;, &#x27;Gd&#x27;, &#x27;Ex&#x27;],\n","                           [&#x27;N_A&#x27;, &#x27;No&#x27;, &#x27;Mn&#x27;, &#x27;Av&#x27;, &#x27;Gd&#x27;],\n","                           [&#x27;N_A&#x27;, &#x27;Unf&#x27;, &#x27;LwQ&#x27;, &#x27;Rec&#x27;, &#x27;BLQ&#x27;, &#x27;ALQ&#x27;, &#x27;GLQ&#x27;],\n","                           [&#x27;Po&#x27;, &#x27;Fa&#x27;, &#x27;TA&#x27;, &#x27;Gd&#x27;, &#x27;Ex&#x27;],\n","                           [&#x27;N_A&#x27;, &#x27;Po&#x27;, &#x27;Fa&#x27;, &#x27;TA&#x27;, &#x27;Gd&#x27;, &#x27;Ex&#x27;]])</pre></div></div></div></div></div></div><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"b9b9af31-c70d-4d46-908d-f17881609b41\" type=\"checkbox\" ><label for=\"b9b9af31-c70d-4d46-908d-f17881609b41\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">cat_onehot</label><div class=\"sk-toggleable__content\"><pre>[11  3  7  5  1  6  4 13 12  9  0  2  8 10]</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"6af63b29-0641-4d19-a1e8-0834f2e87d9b\" type=\"checkbox\" ><label for=\"6af63b29-0641-4d19-a1e8-0834f2e87d9b\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">OneHotEncoder</label><div class=\"sk-toggleable__content\"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"24db8071-7384-47ad-88bd-c8e0dd3198b2\" type=\"checkbox\" ><label for=\"24db8071-7384-47ad-88bd-c8e0dd3198b2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["search.best_score_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kkLa1fl-StGd","executionInfo":{"status":"ok","timestamp":1669633476655,"user_tz":-60,"elapsed":26,"user":{"displayName":"Ben Elvin","userId":"09111547648527423041"}},"outputId":"b0543f3a-05ad-4ef8-adc2-d3f283dbfd28"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9186750302630131"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["my_predictions = search.predict(X_test)"],"metadata":{"id":"XYN3J2fm592P","executionInfo":{"status":"ok","timestamp":1669633557396,"user_tz":-60,"elapsed":15,"user":{"displayName":"Ben Elvin","userId":"09111547648527423041"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["X_test.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":299},"id":"TGBcAj7H6EZ1","executionInfo":{"status":"ok","timestamp":1669633572439,"user_tz":-60,"elapsed":697,"user":{"displayName":"Ben Elvin","userId":"09111547648527423041"}},"outputId":"670138ff-c55e-4003-a3be-9780d89b2349"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      LotArea  LotFrontage  TotalBsmtSF  BedroomAbvGr  Fireplaces  PoolArea  \\\n","147      9505          NaN          884             3           1         0   \n","676      9600         60.0         1095             4           0         0   \n","1304     3363         32.0          976             3           0         0   \n","1372     9750         75.0         1108             3           1         0   \n","1427    10930         60.0          913             3           1         0   \n","\n","      GarageCars  WoodDeckSF  ScreenPorch MSZoning  ... CentralAir Foundation  \\\n","147            2         144            0       RL  ...          Y      PConc   \n","676            3           0            0       RM  ...          N     BrkTil   \n","1304           2           0            0       RM  ...          Y      PConc   \n","1372           2         253            0       RL  ...          Y      PConc   \n","1427           1           0            0       RL  ...          Y     CBlock   \n","\n","     ExterQual ExterCond BsmtQual BsmtCond BsmtExposure BsmtFinType1  \\\n","147         Gd        TA       Gd       TA           No          Unf   \n","676         TA        TA       TA       Fa           No          Unf   \n","1304        Gd        TA       Gd       TA           No          Unf   \n","1372        TA        TA       Gd       TA           Av          GLQ   \n","1427        TA        TA       TA       TA           No          BLQ   \n","\n","     KitchenQual FireplaceQu  \n","147           Gd          Gd  \n","676           TA         NaN  \n","1304          Gd         NaN  \n","1372          Gd          TA  \n","1427          TA          TA  \n","\n","[5 rows x 23 columns]"],"text/html":["\n","  <div id=\"df-1e9acadb-cf38-420b-872a-5d5aa274d50d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>LotArea</th>\n","      <th>LotFrontage</th>\n","      <th>TotalBsmtSF</th>\n","      <th>BedroomAbvGr</th>\n","      <th>Fireplaces</th>\n","      <th>PoolArea</th>\n","      <th>GarageCars</th>\n","      <th>WoodDeckSF</th>\n","      <th>ScreenPorch</th>\n","      <th>MSZoning</th>\n","      <th>...</th>\n","      <th>CentralAir</th>\n","      <th>Foundation</th>\n","      <th>ExterQual</th>\n","      <th>ExterCond</th>\n","      <th>BsmtQual</th>\n","      <th>BsmtCond</th>\n","      <th>BsmtExposure</th>\n","      <th>BsmtFinType1</th>\n","      <th>KitchenQual</th>\n","      <th>FireplaceQu</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>147</th>\n","      <td>9505</td>\n","      <td>NaN</td>\n","      <td>884</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>144</td>\n","      <td>0</td>\n","      <td>RL</td>\n","      <td>...</td>\n","      <td>Y</td>\n","      <td>PConc</td>\n","      <td>Gd</td>\n","      <td>TA</td>\n","      <td>Gd</td>\n","      <td>TA</td>\n","      <td>No</td>\n","      <td>Unf</td>\n","      <td>Gd</td>\n","      <td>Gd</td>\n","    </tr>\n","    <tr>\n","      <th>676</th>\n","      <td>9600</td>\n","      <td>60.0</td>\n","      <td>1095</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>RM</td>\n","      <td>...</td>\n","      <td>N</td>\n","      <td>BrkTil</td>\n","      <td>TA</td>\n","      <td>TA</td>\n","      <td>TA</td>\n","      <td>Fa</td>\n","      <td>No</td>\n","      <td>Unf</td>\n","      <td>TA</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1304</th>\n","      <td>3363</td>\n","      <td>32.0</td>\n","      <td>976</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>RM</td>\n","      <td>...</td>\n","      <td>Y</td>\n","      <td>PConc</td>\n","      <td>Gd</td>\n","      <td>TA</td>\n","      <td>Gd</td>\n","      <td>TA</td>\n","      <td>No</td>\n","      <td>Unf</td>\n","      <td>Gd</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1372</th>\n","      <td>9750</td>\n","      <td>75.0</td>\n","      <td>1108</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>253</td>\n","      <td>0</td>\n","      <td>RL</td>\n","      <td>...</td>\n","      <td>Y</td>\n","      <td>PConc</td>\n","      <td>TA</td>\n","      <td>TA</td>\n","      <td>Gd</td>\n","      <td>TA</td>\n","      <td>Av</td>\n","      <td>GLQ</td>\n","      <td>Gd</td>\n","      <td>TA</td>\n","    </tr>\n","    <tr>\n","      <th>1427</th>\n","      <td>10930</td>\n","      <td>60.0</td>\n","      <td>913</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>RL</td>\n","      <td>...</td>\n","      <td>Y</td>\n","      <td>CBlock</td>\n","      <td>TA</td>\n","      <td>TA</td>\n","      <td>TA</td>\n","      <td>TA</td>\n","      <td>No</td>\n","      <td>BLQ</td>\n","      <td>TA</td>\n","      <td>TA</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 23 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1e9acadb-cf38-420b-872a-5d5aa274d50d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1e9acadb-cf38-420b-872a-5d5aa274d50d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1e9acadb-cf38-420b-872a-5d5aa274d50d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["my_submission = pd.DataFrame(X_test.index)\n","my_submission"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"qh6jkjqD6nlg","executionInfo":{"status":"ok","timestamp":1669633628459,"user_tz":-60,"elapsed":23,"user":{"displayName":"Ben Elvin","userId":"09111547648527423041"}},"outputId":"74f21200-61ea-439c-8a6f-00c727caee56"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        0\n","0     147\n","1     676\n","2    1304\n","3    1372\n","4    1427\n","..    ...\n","287  1012\n","288  1059\n","289   890\n","290   628\n","291   352\n","\n","[292 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-b6a3715a-4ee4-4171-b825-928cd4c0c746\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>147</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>676</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1304</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1372</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1427</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>287</th>\n","      <td>1012</td>\n","    </tr>\n","    <tr>\n","      <th>288</th>\n","      <td>1059</td>\n","    </tr>\n","    <tr>\n","      <th>289</th>\n","      <td>890</td>\n","    </tr>\n","    <tr>\n","      <th>290</th>\n","      <td>628</td>\n","    </tr>\n","    <tr>\n","      <th>291</th>\n","      <td>352</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>292 rows × 1 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b6a3715a-4ee4-4171-b825-928cd4c0c746')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b6a3715a-4ee4-4171-b825-928cd4c0c746 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b6a3715a-4ee4-4171-b825-928cd4c0c746');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["X_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"tSm1B_iI7Hvs","executionInfo":{"status":"ok","timestamp":1669633710053,"user_tz":-60,"elapsed":254,"user":{"displayName":"Ben Elvin","userId":"09111547648527423041"}},"outputId":"e1a420cc-9af6-4385-d44d-4ad2d4d2e679"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      LotArea  LotFrontage  TotalBsmtSF  BedroomAbvGr  Fireplaces  PoolArea  \\\n","147      9505          NaN          884             3           1         0   \n","676      9600         60.0         1095             4           0         0   \n","1304     3363         32.0          976             3           0         0   \n","1372     9750         75.0         1108             3           1         0   \n","1427    10930         60.0          913             3           1         0   \n","...       ...          ...          ...           ...         ...       ...   \n","1012    10592         55.0          602             3           2         0   \n","1059    11275          NaN          854             3           1         0   \n","890      8064         60.0          672             3           1         0   \n","628     11606         70.0         1040             5           2         0   \n","352      9084         60.0          616             3           0         0   \n","\n","      GarageCars  WoodDeckSF  ScreenPorch MSZoning  ... CentralAir Foundation  \\\n","147            2         144            0       RL  ...          Y      PConc   \n","676            3           0            0       RM  ...          N     BrkTil   \n","1304           2           0            0       RM  ...          Y      PConc   \n","1372           2         253            0       RL  ...          Y      PConc   \n","1427           1           0            0       RL  ...          Y     CBlock   \n","...          ...         ...          ...      ...  ...        ...        ...   \n","1012           1          96           53       RL  ...          Y      PConc   \n","1059           2           0            0       RL  ...          Y     CBlock   \n","890            2           0            0       RL  ...          Y     CBlock   \n","628            2         335            0       RL  ...          Y      PConc   \n","352            1          48            0       RL  ...          N     CBlock   \n","\n","     ExterQual ExterCond BsmtQual BsmtCond BsmtExposure BsmtFinType1  \\\n","147         Gd        TA       Gd       TA           No          Unf   \n","676         TA        TA       TA       Fa           No          Unf   \n","1304        Gd        TA       Gd       TA           No          Unf   \n","1372        TA        TA       Gd       TA           Av          GLQ   \n","1427        TA        TA       TA       TA           No          BLQ   \n","...        ...       ...      ...      ...          ...          ...   \n","1012        TA        Gd       TA       Fa           No          Unf   \n","1059        TA        TA       TA       TA           Mn          Rec   \n","890         TA        Gd       TA       TA           Mn          Unf   \n","628         TA        TA       Gd       TA           Av          Rec   \n","352         TA        TA       TA       Fa           Mn          LwQ   \n","\n","     KitchenQual FireplaceQu  \n","147           Gd          Gd  \n","676           TA         NaN  \n","1304          Gd         NaN  \n","1372          Gd          TA  \n","1427          TA          TA  \n","...          ...         ...  \n","1012          Gd          TA  \n","1059          TA          Gd  \n","890           TA          Po  \n","628           Fa          TA  \n","352           TA         NaN  \n","\n","[292 rows x 23 columns]"],"text/html":["\n","  <div id=\"df-58fb54dd-1b04-4b85-9970-d6d7fb6a1184\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>LotArea</th>\n","      <th>LotFrontage</th>\n","      <th>TotalBsmtSF</th>\n","      <th>BedroomAbvGr</th>\n","      <th>Fireplaces</th>\n","      <th>PoolArea</th>\n","      <th>GarageCars</th>\n","      <th>WoodDeckSF</th>\n","      <th>ScreenPorch</th>\n","      <th>MSZoning</th>\n","      <th>...</th>\n","      <th>CentralAir</th>\n","      <th>Foundation</th>\n","      <th>ExterQual</th>\n","      <th>ExterCond</th>\n","      <th>BsmtQual</th>\n","      <th>BsmtCond</th>\n","      <th>BsmtExposure</th>\n","      <th>BsmtFinType1</th>\n","      <th>KitchenQual</th>\n","      <th>FireplaceQu</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>147</th>\n","      <td>9505</td>\n","      <td>NaN</td>\n","      <td>884</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>144</td>\n","      <td>0</td>\n","      <td>RL</td>\n","      <td>...</td>\n","      <td>Y</td>\n","      <td>PConc</td>\n","      <td>Gd</td>\n","      <td>TA</td>\n","      <td>Gd</td>\n","      <td>TA</td>\n","      <td>No</td>\n","      <td>Unf</td>\n","      <td>Gd</td>\n","      <td>Gd</td>\n","    </tr>\n","    <tr>\n","      <th>676</th>\n","      <td>9600</td>\n","      <td>60.0</td>\n","      <td>1095</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>RM</td>\n","      <td>...</td>\n","      <td>N</td>\n","      <td>BrkTil</td>\n","      <td>TA</td>\n","      <td>TA</td>\n","      <td>TA</td>\n","      <td>Fa</td>\n","      <td>No</td>\n","      <td>Unf</td>\n","      <td>TA</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1304</th>\n","      <td>3363</td>\n","      <td>32.0</td>\n","      <td>976</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>RM</td>\n","      <td>...</td>\n","      <td>Y</td>\n","      <td>PConc</td>\n","      <td>Gd</td>\n","      <td>TA</td>\n","      <td>Gd</td>\n","      <td>TA</td>\n","      <td>No</td>\n","      <td>Unf</td>\n","      <td>Gd</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1372</th>\n","      <td>9750</td>\n","      <td>75.0</td>\n","      <td>1108</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>253</td>\n","      <td>0</td>\n","      <td>RL</td>\n","      <td>...</td>\n","      <td>Y</td>\n","      <td>PConc</td>\n","      <td>TA</td>\n","      <td>TA</td>\n","      <td>Gd</td>\n","      <td>TA</td>\n","      <td>Av</td>\n","      <td>GLQ</td>\n","      <td>Gd</td>\n","      <td>TA</td>\n","    </tr>\n","    <tr>\n","      <th>1427</th>\n","      <td>10930</td>\n","      <td>60.0</td>\n","      <td>913</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>RL</td>\n","      <td>...</td>\n","      <td>Y</td>\n","      <td>CBlock</td>\n","      <td>TA</td>\n","      <td>TA</td>\n","      <td>TA</td>\n","      <td>TA</td>\n","      <td>No</td>\n","      <td>BLQ</td>\n","      <td>TA</td>\n","      <td>TA</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1012</th>\n","      <td>10592</td>\n","      <td>55.0</td>\n","      <td>602</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>96</td>\n","      <td>53</td>\n","      <td>RL</td>\n","      <td>...</td>\n","      <td>Y</td>\n","      <td>PConc</td>\n","      <td>TA</td>\n","      <td>Gd</td>\n","      <td>TA</td>\n","      <td>Fa</td>\n","      <td>No</td>\n","      <td>Unf</td>\n","      <td>Gd</td>\n","      <td>TA</td>\n","    </tr>\n","    <tr>\n","      <th>1059</th>\n","      <td>11275</td>\n","      <td>NaN</td>\n","      <td>854</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>RL</td>\n","      <td>...</td>\n","      <td>Y</td>\n","      <td>CBlock</td>\n","      <td>TA</td>\n","      <td>TA</td>\n","      <td>TA</td>\n","      <td>TA</td>\n","      <td>Mn</td>\n","      <td>Rec</td>\n","      <td>TA</td>\n","      <td>Gd</td>\n","    </tr>\n","    <tr>\n","      <th>890</th>\n","      <td>8064</td>\n","      <td>60.0</td>\n","      <td>672</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>RL</td>\n","      <td>...</td>\n","      <td>Y</td>\n","      <td>CBlock</td>\n","      <td>TA</td>\n","      <td>Gd</td>\n","      <td>TA</td>\n","      <td>TA</td>\n","      <td>Mn</td>\n","      <td>Unf</td>\n","      <td>TA</td>\n","      <td>Po</td>\n","    </tr>\n","    <tr>\n","      <th>628</th>\n","      <td>11606</td>\n","      <td>70.0</td>\n","      <td>1040</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>335</td>\n","      <td>0</td>\n","      <td>RL</td>\n","      <td>...</td>\n","      <td>Y</td>\n","      <td>PConc</td>\n","      <td>TA</td>\n","      <td>TA</td>\n","      <td>Gd</td>\n","      <td>TA</td>\n","      <td>Av</td>\n","      <td>Rec</td>\n","      <td>Fa</td>\n","      <td>TA</td>\n","    </tr>\n","    <tr>\n","      <th>352</th>\n","      <td>9084</td>\n","      <td>60.0</td>\n","      <td>616</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>48</td>\n","      <td>0</td>\n","      <td>RL</td>\n","      <td>...</td>\n","      <td>N</td>\n","      <td>CBlock</td>\n","      <td>TA</td>\n","      <td>TA</td>\n","      <td>TA</td>\n","      <td>Fa</td>\n","      <td>Mn</td>\n","      <td>LwQ</td>\n","      <td>TA</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>292 rows × 23 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-58fb54dd-1b04-4b85-9970-d6d7fb6a1184')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-58fb54dd-1b04-4b85-9970-d6d7fb6a1184 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-58fb54dd-1b04-4b85-9970-d6d7fb6a1184');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["my_predictions"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FJQYCD387SV_","executionInfo":{"status":"ok","timestamp":1669633752645,"user_tz":-60,"elapsed":11,"user":{"displayName":"Ben Elvin","userId":"09111547648527423041"}},"outputId":"1b74a6aa-bf79-4854-f387-534be6f7d539"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,\n","       0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0,\n","       0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0,\n","       0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1,\n","       1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1,\n","       0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0,\n","       1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,\n","       0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0])"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["my_submission[\"Expensive\"] = my_predictions\n","my_submission"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"nQ8uyj_N61Ye","executionInfo":{"status":"ok","timestamp":1669633673565,"user_tz":-60,"elapsed":903,"user":{"displayName":"Ben Elvin","userId":"09111547648527423041"}},"outputId":"a1c2414d-788e-42d9-9a92-6c0778c546cd"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        0  Expensive\n","0     147          0\n","1     676          0\n","2    1304          0\n","3    1372          0\n","4    1427          0\n","..    ...        ...\n","287  1012          0\n","288  1059          0\n","289   890          0\n","290   628          0\n","291   352          0\n","\n","[292 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-4e549777-f31e-440f-80ac-08fbdfcfcf05\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>Expensive</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>147</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>676</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1304</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1372</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1427</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>287</th>\n","      <td>1012</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>288</th>\n","      <td>1059</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>289</th>\n","      <td>890</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>290</th>\n","      <td>628</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>291</th>\n","      <td>352</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>292 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4e549777-f31e-440f-80ac-08fbdfcfcf05')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4e549777-f31e-440f-80ac-08fbdfcfcf05 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4e549777-f31e-440f-80ac-08fbdfcfcf05');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":[".rename()"],"metadata":{"id":"tRqoqTCW7ANO"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"provenance":[{"file_id":"/v2/external/notebooks/empty.ipynb","timestamp":1669285695732}]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}